// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NoteText correct render 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NoteText
    color="#F2C94C"
    note={
      Object {
        "color": 2,
        "created": 1551714600000,
        "id": 1,
        "size": "s",
        "tags": Array [
          1,
          2,
        ],
        "text": "Не забыть сверстать макет",
        "title": "Завтра дедлайн",
        "type": "text",
      }
    }
    setPatchItem={[Function]}
    setPopup={[Function]}
    tags={
      Array [
        "Покупки",
        "Работа",
        "ШРИ",
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <div
        className="wrapper"
      >
        <div
          className="wrapper_color"
          style={
            Object {
              "backgroundColor": "#F2C94C66",
            }
          }
        >
          <h3
            className="title"
          >
            Завтра дедлайн
          </h3>
          <p
            className="text"
          >
            Не забыть сверстать макет
          </p>
          <Connect(NoteFooter)
            note={
              Object {
                "color": 2,
                "created": 1551714600000,
                "id": 1,
                "size": "s",
                "tags": Array [
                  1,
                  2,
                ],
                "text": "Не забыть сверстать макет",
                "title": "Завтра дедлайн",
                "type": "text",
              }
            }
            setPatchItem={[Function]}
            setPopup={[Function]}
            tags={
              Array [
                "Покупки",
                "Работа",
                "ШРИ",
              ]
            }
          />
        </div>
      </div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="wrapper_color"
          style={
            Object {
              "backgroundColor": "#F2C94C66",
            }
          }
        >
          <h3
            className="title"
          >
            Завтра дедлайн
          </h3>
          <p
            className="text"
          >
            Не забыть сверстать макет
          </p>
          <Connect(NoteFooter)
            note={
              Object {
                "color": 2,
                "created": 1551714600000,
                "id": 1,
                "size": "s",
                "tags": Array [
                  1,
                  2,
                ],
                "text": "Не забыть сверстать макет",
                "title": "Завтра дедлайн",
                "type": "text",
              }
            }
            setPatchItem={[Function]}
            setPopup={[Function]}
            tags={
              Array [
                "Покупки",
                "Работа",
                "ШРИ",
              ]
            }
          />
        </div>,
        "className": "wrapper",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h3
              className="title"
            >
              Завтра дедлайн
            </h3>,
            <p
              className="text"
            >
              Не забыть сверстать макет
            </p>,
            <Connect(NoteFooter)
              note={
                Object {
                  "color": 2,
                  "created": 1551714600000,
                  "id": 1,
                  "size": "s",
                  "tags": Array [
                    1,
                    2,
                  ],
                  "text": "Не забыть сверстать макет",
                  "title": "Завтра дедлайн",
                  "type": "text",
                }
              }
              setPatchItem={[Function]}
              setPopup={[Function]}
              tags={
                Array [
                  "Покупки",
                  "Работа",
                  "ШРИ",
                ]
              }
            />,
          ],
          "className": "wrapper_color",
          "style": Object {
            "backgroundColor": "#F2C94C66",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Завтра дедлайн",
              "className": "title",
            },
            "ref": null,
            "rendered": "Завтра дедлайн",
            "type": "h3",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Не забыть сверстать макет",
              "className": "text",
            },
            "ref": null,
            "rendered": "Не забыть сверстать макет",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "note": Object {
                "color": 2,
                "created": 1551714600000,
                "id": 1,
                "size": "s",
                "tags": Array [
                  1,
                  2,
                ],
                "text": "Не забыть сверстать макет",
                "title": "Завтра дедлайн",
                "type": "text",
              },
              "setPatchItem": [Function],
              "setPopup": [Function],
              "tags": Array [
                "Покупки",
                "Работа",
                "ШРИ",
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <div
          className="wrapper"
        >
          <div
            className="wrapper_color"
            style={
              Object {
                "backgroundColor": "#F2C94C66",
              }
            }
          >
            <h3
              className="title"
            >
              Завтра дедлайн
            </h3>
            <p
              className="text"
            >
              Не забыть сверстать макет
            </p>
            <Connect(NoteFooter)
              note={
                Object {
                  "color": 2,
                  "created": 1551714600000,
                  "id": 1,
                  "size": "s",
                  "tags": Array [
                    1,
                    2,
                  ],
                  "text": "Не забыть сверстать макет",
                  "title": "Завтра дедлайн",
                  "type": "text",
                }
              }
              setPatchItem={[Function]}
              setPopup={[Function]}
              tags={
                Array [
                  "Покупки",
                  "Работа",
                  "ШРИ",
                ]
              }
            />
          </div>
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="wrapper_color"
            style={
              Object {
                "backgroundColor": "#F2C94C66",
              }
            }
          >
            <h3
              className="title"
            >
              Завтра дедлайн
            </h3>
            <p
              className="text"
            >
              Не забыть сверстать макет
            </p>
            <Connect(NoteFooter)
              note={
                Object {
                  "color": 2,
                  "created": 1551714600000,
                  "id": 1,
                  "size": "s",
                  "tags": Array [
                    1,
                    2,
                  ],
                  "text": "Не забыть сверстать макет",
                  "title": "Завтра дедлайн",
                  "type": "text",
                }
              }
              setPatchItem={[Function]}
              setPopup={[Function]}
              tags={
                Array [
                  "Покупки",
                  "Работа",
                  "ШРИ",
                ]
              }
            />
          </div>,
          "className": "wrapper",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h3
                className="title"
              >
                Завтра дедлайн
              </h3>,
              <p
                className="text"
              >
                Не забыть сверстать макет
              </p>,
              <Connect(NoteFooter)
                note={
                  Object {
                    "color": 2,
                    "created": 1551714600000,
                    "id": 1,
                    "size": "s",
                    "tags": Array [
                      1,
                      2,
                    ],
                    "text": "Не забыть сверстать макет",
                    "title": "Завтра дедлайн",
                    "type": "text",
                  }
                }
                setPatchItem={[Function]}
                setPopup={[Function]}
                tags={
                  Array [
                    "Покупки",
                    "Работа",
                    "ШРИ",
                  ]
                }
              />,
            ],
            "className": "wrapper_color",
            "style": Object {
              "backgroundColor": "#F2C94C66",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Завтра дедлайн",
                "className": "title",
              },
              "ref": null,
              "rendered": "Завтра дедлайн",
              "type": "h3",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Не забыть сверстать макет",
                "className": "text",
              },
              "ref": null,
              "rendered": "Не забыть сверстать макет",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "note": Object {
                  "color": 2,
                  "created": 1551714600000,
                  "id": 1,
                  "size": "s",
                  "tags": Array [
                    1,
                    2,
                  ],
                  "text": "Не забыть сверстать макет",
                  "title": "Завтра дедлайн",
                  "type": "text",
                },
                "setPatchItem": [Function],
                "setPopup": [Function],
                "tags": Array [
                  "Покупки",
                  "Работа",
                  "ШРИ",
                ],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
