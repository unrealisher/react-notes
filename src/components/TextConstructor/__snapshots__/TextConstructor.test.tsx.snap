// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextConstructor correct render 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TextConstructor
    setText={[Function]}
    text="Hello World!"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <label
          htmlFor="textarea"
        >
          Текст заметки:
        </label>,
        <textarea
          className="textarea"
          id="textarea"
          name="textarea"
          onChange={[Function]}
          value="Hello World!"
        />,
      ],
      "className": "wrapper",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Текст заметки:",
          "htmlFor": "textarea",
        },
        "ref": null,
        "rendered": "Текст заметки:",
        "type": "label",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "textarea",
          "id": "textarea",
          "name": "textarea",
          "onChange": [Function],
          "value": "Hello World!",
        },
        "ref": Object {
          "current": null,
        },
        "rendered": null,
        "type": "textarea",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <label
            htmlFor="textarea"
          >
            Текст заметки:
          </label>,
          <textarea
            className="textarea"
            id="textarea"
            name="textarea"
            onChange={[Function]}
            value="Hello World!"
          />,
        ],
        "className": "wrapper",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Текст заметки:",
            "htmlFor": "textarea",
          },
          "ref": null,
          "rendered": "Текст заметки:",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "textarea",
            "id": "textarea",
            "name": "textarea",
            "onChange": [Function],
            "value": "Hello World!",
          },
          "ref": Object {
            "current": null,
          },
          "rendered": null,
          "type": "textarea",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
